{
  "contractName": "GreenNFTTradable",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AllGreenCoin",
          "name": "_allGreenCoin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "contract GreenNFTData",
          "name": "_greenNFTData",
          "type": "address"
        },
        {
          "internalType": "contract GreenNFT",
          "name": "greenNFT",
          "type": "address"
        }
      ],
      "name": "openToPutOnSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract GreenNFTData",
          "name": "_greenNFTData",
          "type": "address"
        },
        {
          "internalType": "contract GreenNFT",
          "name": "greenNFT",
          "type": "address"
        }
      ],
      "name": "cancelToPutOnSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AllGreenCoin\",\"name\":\"_allGreenCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract GreenNFTData\",\"name\":\"_greenNFTData\",\"type\":\"address\"},{\"internalType\":\"contract GreenNFT\",\"name\":\"greenNFT\",\"type\":\"address\"}],\"name\":\"cancelToPutOnSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract GreenNFTData\",\"name\":\"_greenNFTData\",\"type\":\"address\"},{\"internalType\":\"contract GreenNFT\",\"name\":\"greenNFT\",\"type\":\"address\"}],\"name\":\"openToPutOnSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"- GreenNFTTradable contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelToPutOnSale(address,address)\":{\"notice\":\"- Cancel to put on sale of carbon credits.- Caller is a seller\"},\"constructor\":{\"notice\":\"[Note]: The reason why I use \\\"private\\\" is to avoid an error of \\\"Overriding public state variable\\\"\"},\"openToPutOnSale(address,address)\":{\"notice\":\"- Open to put on sale of carbon credits.- Caller is a projectOwner (Seller)\"}},\"notice\":\"- This contract has role that switch open/cancel to put on sale of carbon credits\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GreenNFTTradable.sol\":\"GreenNFTTradable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b652499d098e88d8d878374616bb58434301061cae2253298b3f374044e0ddb\",\"dweb:/ipfs/QmbhAzctqo5jrSKU6idHdVyqfmzCcDbNUPvmx4GiXxfA6q\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c25cac8dbe5bd96320053d23c3dacdb875e629d7c53ac00892eb7aa8500bde6\",\"dweb:/ipfs/Qmaf2oqbxxdJA9DphAoH4UCb8aXEAVM8fnu6qMxHJ5ta4A\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8\",\"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c9f260258c2be0e3b75f8ca285872c4bfa3a8fc97fdc2e62366c78abf22b54f\",\"dweb:/ipfs/QmTg1DMNwCDj8NVi6i1noqx7cxuRdPP4VyW4fzDkKAKmH2\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/AllGreenCoin.sol\":{\"keccak256\":\"0xbec38882e20b6e9c21970b26b5e441f52aa830eb1b28a93ef28029348358938e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e626ba6e8406d964bfce399e85235d81cf4aebc7ee26b0b688cf827dd258342d\",\"dweb:/ipfs/QmcABcBeobTxHez6MHqdoFmEhhkBpWc4GubNAfTL1HGaZX\"]},\"project:/contracts/GreenNFT.sol\":{\"keccak256\":\"0x07c33f9d16424c7c0b0977e186f4bc3c69530a389f722baacf9d08f12a8b7f7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e451f453d72a8bc9939f0140eb13c65b820e748cc131f417536ec7b87dc13a6b\",\"dweb:/ipfs/QmbpZd1iL4bmoJNxQnKthcrdevfFBHU7CVHYfMNbSZWeHb\"]},\"project:/contracts/GreenNFTData.sol\":{\"keccak256\":\"0xba9f43546cec996b9969b01fe8a6c1c37f4c51cfc6469c493e294815b18e3e2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://283584892edb1cfea55c6a1c9af8d77b2ca1096b8cc9f149f48ee91b74214744\",\"dweb:/ipfs/QmWpbNxRuxb5rK7dPmPKzFmJcSavEnVmT8gbvcEfwxrzFQ\"]},\"project:/contracts/GreenNFTTradable.sol\":{\"keccak256\":\"0x3a2094c36e972f9c240d68f4284ca0f5f997ed69d967db3c3ea988ecfef8feaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a37e03c361a1a8bcb8b423850b05f0381450e77f10f41bbfc902cd51f7231b8\",\"dweb:/ipfs/QmQTFvi7z3F48htnft4nn8V3mECCuLwGuXwQESG6MYhKyi\"]},\"project:/contracts/commons/GreenNFTDataCommons.sol\":{\"keccak256\":\"0x6ca573b852b7333579cfaaf592ed99e4513693a5b2eeb8903332f0b328be436b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bdd173532ec5e77fe16feb9cadd89c7ae452ecb5cfae8a16d87f700ed6e539b\",\"dweb:/ipfs/QmeR7t4PdVLY9575PiqfrV1gRV7m4WvSBLYuV8HD7SbQ7b\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109aa3803806109aa833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b610881806101296000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630525530a1461003b5780638b21266114610057575b600080fd5b610055600480360381019061005091906104a2565b610073565b005b610071600480360381019061006c91906104a2565b61022b565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166344c5bbf88360026040518363ffffffff1660e01b81526004016100b49291906105b8565b6020604051808303816000875af11580156100d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f79190610619565b5060008173ffffffffffffffffffffffffffffffffffffffff16633fbd34c9846040518263ffffffff1660e01b81526004016101339190610646565b608060405180830381865afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017491906107a0565b9050600081604001519050600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016101df9291906107eb565b6020604051808303816000875af11580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102229190610619565b50505050505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166344c5bbf88360016040518363ffffffff1660e01b815260040161026c9291906105b8565b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610619565b5060008173ffffffffffffffffffffffffffffffffffffffff16633fbd34c9846040518263ffffffff1660e01b81526004016102eb9190610646565b608060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906107a0565b9050600081604001519050600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b815260040161039993929190610814565b6020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610619565b50505050505050565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041f826103f4565b9050919050565b600061043182610414565b9050919050565b61044181610426565b811461044c57600080fd5b50565b60008135905061045e81610438565b92915050565b600061046f82610414565b9050919050565b61047f81610464565b811461048a57600080fd5b50565b60008135905061049c81610476565b92915050565b600080604083850312156104b9576104b86103ef565b5b60006104c78582860161044f565b92505060206104d88582860161048d565b9150509250929050565b6000819050919050565b60006105076105026104fd846103f4565b6104e2565b6103f4565b9050919050565b6000610519826104ec565b9050919050565b600061052b8261050e565b9050919050565b61053b81610520565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061058157610580610541565b5b50565b600081905061059282610570565b919050565b60006105a282610584565b9050919050565b6105b281610597565b82525050565b60006040820190506105cd6000830185610532565b6105da60208301846105a9565b9392505050565b60008115159050919050565b6105f6816105e1565b811461060157600080fd5b50565b600081519050610613816105ed565b92915050565b60006020828403121561062f5761062e6103ef565b5b600061063d84828501610604565b91505092915050565b600060208201905061065b6000830184610532565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106af82610666565b810181811067ffffffffffffffff821117156106ce576106cd610677565b5b80604052505050565b60006106e16103e5565b90506106ed82826106a6565b919050565b6000819050919050565b610705816106f2565b811461071057600080fd5b50565b600081519050610722816106fc565b92915050565b60006080828403121561073e5761073d610661565b5b61074860806106d7565b9050600061075884828501610713565b600083015250602061076c84828501610713565b602083015250604061078084828501610713565b604083015250606061079484828501610713565b60608301525092915050565b6000608082840312156107b6576107b56103ef565b5b60006107c484828501610728565b91505092915050565b6107d681610414565b82525050565b6107e5816106f2565b82525050565b600060408201905061080060008301856107cd565b61080d60208301846107dc565b9392505050565b600060608201905061082960008301866107cd565b61083660208301856107cd565b61084360408301846107dc565b94935050505056fea26469706673582212208aefa2ec8c4a1af1fa57e4a10861181287c5c4539398ebf57ecc0822710a446264736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630525530a1461003b5780638b21266114610057575b600080fd5b610055600480360381019061005091906104a2565b610073565b005b610071600480360381019061006c91906104a2565b61022b565b005b60008290508073ffffffffffffffffffffffffffffffffffffffff166344c5bbf88360026040518363ffffffff1660e01b81526004016100b49291906105b8565b6020604051808303816000875af11580156100d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f79190610619565b5060008173ffffffffffffffffffffffffffffffffffffffff16633fbd34c9846040518263ffffffff1660e01b81526004016101339190610646565b608060405180830381865afa158015610150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017491906107a0565b9050600081604001519050600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82846040518363ffffffff1660e01b81526004016101df9291906107eb565b6020604051808303816000875af11580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102229190610619565b50505050505050565b60008290508073ffffffffffffffffffffffffffffffffffffffff166344c5bbf88360016040518363ffffffff1660e01b815260040161026c9291906105b8565b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610619565b5060008173ffffffffffffffffffffffffffffffffffffffff16633fbd34c9846040518263ffffffff1660e01b81526004016102eb9190610646565b608060405180830381865afa158015610308573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032c91906107a0565b9050600081604001519050600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230856040518463ffffffff1660e01b815260040161039993929190610814565b6020604051808303816000875af11580156103b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103dc9190610619565b50505050505050565b6000604051905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061041f826103f4565b9050919050565b600061043182610414565b9050919050565b61044181610426565b811461044c57600080fd5b50565b60008135905061045e81610438565b92915050565b600061046f82610414565b9050919050565b61047f81610464565b811461048a57600080fd5b50565b60008135905061049c81610476565b92915050565b600080604083850312156104b9576104b86103ef565b5b60006104c78582860161044f565b92505060206104d88582860161048d565b9150509250929050565b6000819050919050565b60006105076105026104fd846103f4565b6104e2565b6103f4565b9050919050565b6000610519826104ec565b9050919050565b600061052b8261050e565b9050919050565b61053b81610520565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061058157610580610541565b5b50565b600081905061059282610570565b919050565b60006105a282610584565b9050919050565b6105b281610597565b82525050565b60006040820190506105cd6000830185610532565b6105da60208301846105a9565b9392505050565b60008115159050919050565b6105f6816105e1565b811461060157600080fd5b50565b600081519050610613816105ed565b92915050565b60006020828403121561062f5761062e6103ef565b5b600061063d84828501610604565b91505092915050565b600060208201905061065b6000830184610532565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106af82610666565b810181811067ffffffffffffffff821117156106ce576106cd610677565b5b80604052505050565b60006106e16103e5565b90506106ed82826106a6565b919050565b6000819050919050565b610705816106f2565b811461071057600080fd5b50565b600081519050610722816106fc565b92915050565b60006080828403121561073e5761073d610661565b5b61074860806106d7565b9050600061075884828501610713565b600083015250602061076c84828501610713565b602083015250604061078084828501610713565b604083015250606061079484828501610713565b60608301525092915050565b6000608082840312156107b6576107b56103ef565b5b60006107c484828501610728565b91505092915050565b6107d681610414565b82525050565b6107e5816106f2565b82525050565b600060408201905061080060008301856107cd565b61080d60208301846107dc565b9392505050565b600060608201905061082960008301866107cd565b61083660208301856107cd565b61084360408301846107dc565b94935050505056fea26469706673582212208aefa2ec8c4a1af1fa57e4a10861181287c5c4539398ebf57ecc0822710a446264736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1448:29",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:29",
                "type": ""
              }
            ],
            "src": "7:75:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:29"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:29"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:29",
                "type": ""
              }
            ],
            "src": "334:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:29",
                "type": ""
              }
            ],
            "src": "466:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "634:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "644:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "673:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "655:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "644:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_AllGreenCoin_$4027",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "616:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "626:7:29",
                "type": ""
              }
            ],
            "src": "568:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:100:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "833:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "835:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "835:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "835:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "778:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "824:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_AllGreenCoin_$4027",
                              "nodeType": "YulIdentifier",
                              "src": "785:38:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "785:45:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "775:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:56:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:64:29"
                  },
                  "nodeType": "YulIf",
                  "src": "765:84:29"
                }
              ]
            },
            "name": "validator_revert_t_contract$_AllGreenCoin_$4027",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "748:5:29",
                "type": ""
              }
            ],
            "src": "691:164:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "945:101:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "955:22:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "970:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "964:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "955:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1034:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_AllGreenCoin_$4027",
                      "nodeType": "YulIdentifier",
                      "src": "986:47:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:54:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:54:29"
                }
              ]
            },
            "name": "abi_decode_t_contract$_AllGreenCoin_$4027_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "923:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "931:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "939:5:29",
                "type": ""
              }
            ],
            "src": "861:185:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1150:295:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1196:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1198:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1198:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1198:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1180:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1167:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1192:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1163:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1163:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1160:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1289:149:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1304:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1308:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1333:95:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1400:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1411:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1396:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1396:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1420:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_AllGreenCoin_$4027_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1343:52:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1343:85:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1333:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_AllGreenCoin_$4027_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1120:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1131:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1143:6:29",
                "type": ""
              }
            ],
            "src": "1052:393:29"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_AllGreenCoin_$4027(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_AllGreenCoin_$4027(value) {\n        if iszero(eq(value, cleanup_t_contract$_AllGreenCoin_$4027(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_AllGreenCoin_$4027_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_AllGreenCoin_$4027(value)\n    }\n\n    function abi_decode_tuple_t_contract$_AllGreenCoin_$4027_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_AllGreenCoin_$4027_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8757:29",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:29"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:29",
                "type": ""
              }
            ],
            "src": "7:75:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:29"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:29"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:29",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:29",
                "type": ""
              }
            ],
            "src": "334:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:29",
                "type": ""
              }
            ],
            "src": "466:96:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "634:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "644:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "673:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "655:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "655:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "644:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_GreenNFTData_$4672",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "616:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "626:7:29",
                "type": ""
              }
            ],
            "src": "568:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "755:100:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "833:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "842:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "845:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "835:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "835:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "835:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "778:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "824:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_GreenNFTData_$4672",
                              "nodeType": "YulIdentifier",
                              "src": "785:38:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "785:45:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "775:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:56:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:64:29"
                  },
                  "nodeType": "YulIf",
                  "src": "765:84:29"
                }
              ]
            },
            "name": "validator_revert_t_contract$_GreenNFTData_$4672",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "748:5:29",
                "type": ""
              }
            ],
            "src": "691:164:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "934:108:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "944:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "966:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "953:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "944:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1030:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_GreenNFTData_$4672",
                      "nodeType": "YulIdentifier",
                      "src": "982:47:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:54:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "982:54:29"
                }
              ]
            },
            "name": "abi_decode_t_contract$_GreenNFTData_$4672",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "912:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "920:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "928:5:29",
                "type": ""
              }
            ],
            "src": "861:181:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1110:51:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1120:35:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1149:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1131:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1131:24:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1120:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_GreenNFT_$4110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1092:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1102:7:29",
                "type": ""
              }
            ],
            "src": "1048:113:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:96:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1301:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1310:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1313:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1303:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1303:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1250:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1292:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_GreenNFT_$4110",
                              "nodeType": "YulIdentifier",
                              "src": "1257:34:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1257:41:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1247:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1247:52:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1240:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:60:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1237:80:29"
                }
              ]
            },
            "name": "validator_revert_t_contract$_GreenNFT_$4110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1220:5:29",
                "type": ""
              }
            ],
            "src": "1167:156:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:104:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1408:29:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1430:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1417:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1417:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1408:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1490:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_GreenNFT_$4110",
                      "nodeType": "YulIdentifier",
                      "src": "1446:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:50:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1446:50:29"
                }
              ]
            },
            "name": "abi_decode_t_contract$_GreenNFT_$4110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1376:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1384:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1392:5:29",
                "type": ""
              }
            ],
            "src": "1329:173:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1629:429:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1675:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1677:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1677:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1677:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1650:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1659:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1646:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1671:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1642:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "1639:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1768:138:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1783:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1797:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1787:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1812:84:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1868:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1879:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1864:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1864:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1888:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_GreenNFTData_$4672",
                          "nodeType": "YulIdentifier",
                          "src": "1822:41:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1822:74:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1812:6:29"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1916:135:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1931:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1945:2:29",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1935:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1961:80:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2013:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2024:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2009:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2009:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2033:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_GreenNFT_$4110",
                          "nodeType": "YulIdentifier",
                          "src": "1971:37:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1971:70:29"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1961:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_GreenNFTData_$4672t_contract$_GreenNFT_$4110",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1591:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1602:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1614:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1622:6:29",
                "type": ""
              }
            ],
            "src": "1508:550:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2096:28:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2106:12:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2113:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2106:3:29"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2082:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2092:3:29",
                "type": ""
              }
            ],
            "src": "2064:60:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2190:82:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2200:66:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2258:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2240:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2240:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2231:8:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2231:34:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2213:17:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2213:53:29"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2200:9:29"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2170:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2180:9:29",
                "type": ""
              }
            ],
            "src": "2130:142:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2338:66:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2348:50:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2392:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2361:30:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2361:37:29"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2348:9:29"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2318:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2328:9:29",
                "type": ""
              }
            ],
            "src": "2278:126:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2487:66:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2497:50:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2541:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2510:30:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2510:37:29"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2497:9:29"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_GreenNFT_$4110_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2467:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2477:9:29",
                "type": ""
              }
            ],
            "src": "2410:143:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2641:83:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2658:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2711:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_GreenNFT_$4110_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2663:47:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2663:54:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2651:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:67:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2651:67:29"
                }
              ]
            },
            "name": "abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2629:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2636:3:29",
                "type": ""
              }
            ],
            "src": "2559:165:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2758:152:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2775:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2778:77:29",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2768:88:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2768:88:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2872:1:29",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2875:4:29",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2865:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2865:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2865:15:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2896:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2899:4:29",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2889:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2889:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2889:15:29"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2730:180:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2978:62:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3012:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "3014:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3014:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3014:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3001:5:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3008:1:29",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2998:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2998:12:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2991:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2991:20:29"
                  },
                  "nodeType": "YulIf",
                  "src": "2988:46:29"
                }
              ]
            },
            "name": "validator_assert_t_enum$_GreenNFTStatus_$5737",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2971:5:29",
                "type": ""
              }
            ],
            "src": "2916:124:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3110:85:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3120:16:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3131:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3120:7:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3183:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_GreenNFTStatus_$5737",
                      "nodeType": "YulIdentifier",
                      "src": "3137:45:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3137:52:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3137:52:29"
                }
              ]
            },
            "name": "cleanup_t_enum$_GreenNFTStatus_$5737",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3092:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3102:7:29",
                "type": ""
              }
            ],
            "src": "3046:149:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3278:72:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3288:56:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3338:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_GreenNFTStatus_$5737",
                      "nodeType": "YulIdentifier",
                      "src": "3301:36:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3301:43:29"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3288:9:29"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_GreenNFTStatus_$5737_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3258:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3268:9:29",
                "type": ""
              }
            ],
            "src": "3201:149:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3438:83:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3455:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3508:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_GreenNFTStatus_$5737_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "3460:47:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3460:54:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3448:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:67:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3448:67:29"
                }
              ]
            },
            "name": "abi_encode_t_enum$_GreenNFTStatus_$5737_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3426:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3433:3:29",
                "type": ""
              }
            ],
            "src": "3356:165:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3687:240:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3697:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3709:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3720:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3705:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3705:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3697:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3794:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3807:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3818:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3803:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3803:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3733:60:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3733:88:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3733:88:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3892:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3905:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3916:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3901:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3901:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_GreenNFTStatus_$5737_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3831:60:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3831:89:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3831:89:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GreenNFT_$4110_t_enum$_GreenNFTStatus_$5737__to_t_address_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3651:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3663:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3671:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3682:4:29",
                "type": ""
              }
            ],
            "src": "3527:400:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3975:48:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3985:32:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4010:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4003:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4003:13:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3996:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3996:21:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3985:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3957:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3967:7:29",
                "type": ""
              }
            ],
            "src": "3933:90:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4069:76:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4123:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4132:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4135:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4125:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4125:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4125:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4092:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4114:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "4099:14:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4099:21:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4089:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4089:32:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4082:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4082:40:29"
                  },
                  "nodeType": "YulIf",
                  "src": "4079:60:29"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4062:5:29",
                "type": ""
              }
            ],
            "src": "4029:116:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4211:77:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4221:22:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4236:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4230:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4230:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4221:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4276:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4252:23:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4252:30:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4252:30:29"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4189:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4197:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4205:5:29",
                "type": ""
              }
            ],
            "src": "4151:137:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4368:271:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4414:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4416:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4416:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4416:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4389:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4398:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4385:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4385:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4410:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4381:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4381:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "4378:119:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4507:125:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4522:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4536:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4526:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4551:71:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4594:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4605:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4590:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4590:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4614:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4561:28:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4561:61:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4551:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4338:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4349:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4361:6:29",
                "type": ""
              }
            ],
            "src": "4294:345:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4760:141:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4770:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4782:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4793:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4778:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4778:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4770:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4867:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4880:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4891:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4876:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4876:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4806:60:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4806:88:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4806:88:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GreenNFT_$4110__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4732:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4744:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4755:4:29",
                "type": ""
              }
            ],
            "src": "4645:256:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4996:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5013:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5016:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5006:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5006:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5006:12:29"
                }
              ]
            },
            "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
            "nodeType": "YulFunctionDefinition",
            "src": "4907:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5078:54:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5088:38:29",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5106:5:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5113:2:29",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5102:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5102:14:29"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5122:2:29",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5118:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5118:7:29"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5098:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5098:28:29"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "5088:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5061:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "5071:6:29",
                "type": ""
              }
            ],
            "src": "5030:102:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5166:152:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5183:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5186:77:29",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5176:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5176:88:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5176:88:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5280:1:29",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5283:4:29",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5273:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5273:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5273:15:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5304:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5307:4:29",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5297:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:15:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5297:15:29"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5138:180:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5367:238:29",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5377:58:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5399:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "5429:4:29"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5407:21:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5407:27:29"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5395:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5395:40:29"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5381:10:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5546:22:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5548:16:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5548:18:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5548:18:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5489:10:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5501:18:29",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5486:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5486:34:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5525:10:29"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5537:6:29"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5522:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5522:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5483:2:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5483:62:29"
                  },
                  "nodeType": "YulIf",
                  "src": "5480:88:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5584:2:29",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5588:10:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5577:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5577:22:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5577:22:29"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5353:6:29",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5361:4:29",
                "type": ""
              }
            ],
            "src": "5324:281:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5652:88:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5662:30:29",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "5672:18:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5672:20:29"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5662:6:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5721:6:29"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5729:4:29"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "5701:19:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5701:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5701:33:29"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5636:4:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5645:6:29",
                "type": ""
              }
            ],
            "src": "5611:129:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5835:28:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5852:1:29",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5855:1:29",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5845:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5845:12:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5845:12:29"
                }
              ]
            },
            "name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
            "nodeType": "YulFunctionDefinition",
            "src": "5746:117:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5914:32:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5924:16:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5935:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5924:7:29"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5896:5:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5906:7:29",
                "type": ""
              }
            ],
            "src": "5869:77:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5995:79:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6052:16:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6061:1:29",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6064:1:29",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6054:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6054:12:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6054:12:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6018:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6043:5:29"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "6025:17:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6025:24:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6015:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6015:35:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6008:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:43:29"
                  },
                  "nodeType": "YulIf",
                  "src": "6005:63:29"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5988:5:29",
                "type": ""
              }
            ],
            "src": "5952:122:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6143:80:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6153:22:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6168:6:29"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6162:5:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6162:13:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6153:5:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6211:5:29"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6184:26:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6184:33:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6184:33:29"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "6121:6:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6129:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6137:5:29",
                "type": ""
              }
            ],
            "src": "6080:143:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6386:902:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6430:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
                            "nodeType": "YulIdentifier",
                            "src": "6432:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6432:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6432:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "6407:3:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6412:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6403:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6403:19:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6424:4:29",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6399:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6399:30:29"
                  },
                  "nodeType": "YulIf",
                  "src": "6396:117:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6522:30:29",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6547:4:29",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6531:15:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:21:29"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "6522:5:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6562:169:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6605:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6619:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6609:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6645:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6652:4:29",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6641:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6641:16:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6695:9:29"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6706:6:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6691:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6691:22:29"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6715:3:29"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "6659:31:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6659:60:29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6634:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6634:86:29"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6634:86:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6741:171:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6785:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6799:2:29",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6789:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6826:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6833:4:29",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6822:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6822:16:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6876:9:29"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6887:6:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6872:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6872:22:29"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6896:3:29"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "6840:31:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6840:60:29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6815:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6815:86:29"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6815:86:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6922:171:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6966:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6980:2:29",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6970:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7007:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7014:4:29",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7003:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7003:16:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7057:9:29"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7068:6:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7053:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7053:22:29"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "7077:3:29"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "7021:31:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7021:60:29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6996:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6996:86:29"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6996:86:29"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7103:178:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7154:16:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7168:2:29",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7158:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7195:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7202:4:29",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7191:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7191:16:29"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7245:9:29"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7256:6:29"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7241:3:29"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7241:22:29"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "7265:3:29"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256_fromMemory",
                              "nodeType": "YulIdentifier",
                              "src": "7209:31:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7209:60:29"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7184:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7184:86:29"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7184:86:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6361:9:29",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6372:3:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6380:5:29",
                "type": ""
              }
            ],
            "src": "6283:1005:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7408:312:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7455:83:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7457:77:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7457:79:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7457:79:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7429:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7438:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7425:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7425:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7450:3:29",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7421:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:33:29"
                  },
                  "nodeType": "YulIf",
                  "src": "7418:120:29"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7548:165:29",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7563:15:29",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7577:1:29",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7567:6:29",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7592:111:29",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7675:9:29"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7686:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7671:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7671:22:29"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7695:7:29"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "7602:68:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7602:101:29"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7592:6:29"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7378:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7389:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7401:6:29",
                "type": ""
              }
            ],
            "src": "7294:426:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7791:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7808:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7831:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "7813:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7813:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7801:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7801:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7801:37:29"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7779:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7786:3:29",
                "type": ""
              }
            ],
            "src": "7726:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7915:53:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7932:3:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7955:5:29"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7937:17:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7937:24:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7925:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7925:37:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7925:37:29"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7903:5:29",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7910:3:29",
                "type": ""
              }
            ],
            "src": "7850:118:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8100:206:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8110:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8122:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8133:2:29",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8118:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8110:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8190:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8203:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8214:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8199:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8199:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8146:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8146:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8146:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8271:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8284:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8295:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8280:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8280:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8227:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8227:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8227:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8064:9:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8076:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8084:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8095:4:29",
                "type": ""
              }
            ],
            "src": "7974:332:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8466:288:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8476:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8488:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8499:2:29",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8484:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8484:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8476:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8556:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8569:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8580:1:29",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8565:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8565:17:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8512:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8512:71:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8512:71:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8637:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8650:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8661:2:29",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8646:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8646:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8593:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8593:72:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8719:6:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8732:9:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8743:2:29",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8728:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8728:18:29"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8675:43:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8675:72:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8675:72:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8422:9:29",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8434:6:29",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8442:6:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8450:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8461:4:29",
                "type": ""
              }
            ],
            "src": "8312:442:29"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_GreenNFTData_$4672(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_GreenNFTData_$4672(value) {\n        if iszero(eq(value, cleanup_t_contract$_GreenNFTData_$4672(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_GreenNFTData_$4672(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_GreenNFTData_$4672(value)\n    }\n\n    function cleanup_t_contract$_GreenNFT_$4110(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_GreenNFT_$4110(value) {\n        if iszero(eq(value, cleanup_t_contract$_GreenNFT_$4110(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_GreenNFT_$4110(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_GreenNFT_$4110(value)\n    }\n\n    function abi_decode_tuple_t_contract$_GreenNFTData_$4672t_contract$_GreenNFT_$4110(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_GreenNFTData_$4672(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_GreenNFT_$4110(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GreenNFT_$4110_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GreenNFT_$4110_to_t_address(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_GreenNFTStatus_$5737(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_GreenNFTStatus_$5737(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_GreenNFTStatus_$5737(value)\n    }\n\n    function convert_t_enum$_GreenNFTStatus_$5737_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_GreenNFTStatus_$5737(value)\n    }\n\n    function abi_encode_t_enum$_GreenNFTStatus_$5737_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_GreenNFTStatus_$5737_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_contract$_GreenNFT_$4110_t_enum$_GreenNFTStatus_$5737__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_GreenNFTStatus_$5737_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_GreenNFT_$4110__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GreenNFT_$4110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // struct GreenNFTDataCommons.GreenNFTEmissonData\n    function abi_decode_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // co2Emissions\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // co2Reductions\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // carbonCredits\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // buyableCarbonCredits\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "482:1920:26:-:0;;;657:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;722:13;707:12;;:28;;;;;;;;;;;;;;;;;;657:93;482:1920;;88:117:29;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:117::-;626:7;655:24;673:5;655:24;:::i;:::-;644:35;;568:117;;;:::o;691:164::-;785:45;824:5;785:45;:::i;:::-;778:5;775:56;765:84;;845:1;842;835:12;765:84;691:164;:::o;861:185::-;939:5;970:6;964:13;955:22;;986:54;1034:5;986:54;:::i;:::-;861:185;;;;:::o;1052:393::-;1143:6;1192:2;1180:9;1171:7;1167:23;1163:32;1160:119;;;1198:79;;:::i;:::-;1160:119;1318:1;1343:85;1420:7;1411:6;1400:9;1396:22;1343:85;:::i;:::-;1333:95;;1289:149;1052:393;;;;:::o;482:1920:26:-;;;;;;;",
  "deployedSourceMap": "482:1920:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:719;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;879:685;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1680:719;1771:25;1799:13;1771:41;;1849:12;:25;;;1875:8;1885:42;1849:79;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1980:66;2049:12;:47;;;2097:8;2049:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1980:126;;2116:19;2138;:33;;;2116:55;;2298:20;2321:10;2298:33;;2341:12;;;;;;;;;;:21;;;2363:12;2377:14;2341:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1761:638;;;;1680:719;;:::o;879:685::-;968:25;996:13;968:41;;1054:12;:25;;;1080:8;1090:39;1054:76;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1182:66;1251:12;:47;;;1299:8;1251:57;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1182:126;;1318:19;1340;:33;;;1318:55;;1444:20;1467:10;1444:33;;1487:12;;;;;;;;;;:25;;;1513:12;1535:4;1542:14;1487:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;958:606;;;;879:685;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:117::-;626:7;655:24;673:5;655:24;:::i;:::-;644:35;;568:117;;;:::o;691:164::-;785:45;824:5;785:45;:::i;:::-;778:5;775:56;765:84;;845:1;842;835:12;765:84;691:164;:::o;861:181::-;928:5;966:6;953:20;944:29;;982:54;1030:5;982:54;:::i;:::-;861:181;;;;:::o;1048:113::-;1102:7;1131:24;1149:5;1131:24;:::i;:::-;1120:35;;1048:113;;;:::o;1167:156::-;1257:41;1292:5;1257:41;:::i;:::-;1250:5;1247:52;1237:80;;1313:1;1310;1303:12;1237:80;1167:156;:::o;1329:173::-;1392:5;1430:6;1417:20;1408:29;;1446:50;1490:5;1446:50;:::i;:::-;1329:173;;;;:::o;1508:550::-;1614:6;1622;1671:2;1659:9;1650:7;1646:23;1642:32;1639:119;;;1677:79;;:::i;:::-;1639:119;1797:1;1822:74;1888:7;1879:6;1868:9;1864:22;1822:74;:::i;:::-;1812:84;;1768:138;1945:2;1971:70;2033:7;2024:6;2013:9;2009:22;1971:70;:::i;:::-;1961:80;;1916:135;1508:550;;;;;:::o;2064:60::-;2092:3;2113:5;2106:12;;2064:60;;;:::o;2130:142::-;2180:9;2213:53;2231:34;2240:24;2258:5;2240:24;:::i;:::-;2231:34;:::i;:::-;2213:53;:::i;:::-;2200:66;;2130:142;;;:::o;2278:126::-;2328:9;2361:37;2392:5;2361:37;:::i;:::-;2348:50;;2278:126;;;:::o;2410:143::-;2477:9;2510:37;2541:5;2510:37;:::i;:::-;2497:50;;2410:143;;;:::o;2559:165::-;2663:54;2711:5;2663:54;:::i;:::-;2658:3;2651:67;2559:165;;:::o;2730:180::-;2778:77;2775:1;2768:88;2875:4;2872:1;2865:15;2899:4;2896:1;2889:15;2916:124;3008:1;3001:5;2998:12;2988:46;;3014:18;;:::i;:::-;2988:46;2916:124;:::o;3046:149::-;3102:7;3131:5;3120:16;;3137:52;3183:5;3137:52;:::i;:::-;3046:149;;;:::o;3201:::-;3268:9;3301:43;3338:5;3301:43;:::i;:::-;3288:56;;3201:149;;;:::o;3356:165::-;3460:54;3508:5;3460:54;:::i;:::-;3455:3;3448:67;3356:165;;:::o;3527:400::-;3682:4;3720:2;3709:9;3705:18;3697:26;;3733:88;3818:1;3807:9;3803:17;3794:6;3733:88;:::i;:::-;3831:89;3916:2;3905:9;3901:18;3892:6;3831:89;:::i;:::-;3527:400;;;;;:::o;3933:90::-;3967:7;4010:5;4003:13;3996:21;3985:32;;3933:90;;;:::o;4029:116::-;4099:21;4114:5;4099:21;:::i;:::-;4092:5;4089:32;4079:60;;4135:1;4132;4125:12;4079:60;4029:116;:::o;4151:137::-;4205:5;4236:6;4230:13;4221:22;;4252:30;4276:5;4252:30;:::i;:::-;4151:137;;;;:::o;4294:345::-;4361:6;4410:2;4398:9;4389:7;4385:23;4381:32;4378:119;;;4416:79;;:::i;:::-;4378:119;4536:1;4561:61;4614:7;4605:6;4594:9;4590:22;4561:61;:::i;:::-;4551:71;;4507:125;4294:345;;;;:::o;4645:256::-;4755:4;4793:2;4782:9;4778:18;4770:26;;4806:88;4891:1;4880:9;4876:17;4867:6;4806:88;:::i;:::-;4645:256;;;;:::o;4907:117::-;5016:1;5013;5006:12;5030:102;5071:6;5122:2;5118:7;5113:2;5106:5;5102:14;5098:28;5088:38;;5030:102;;;:::o;5138:180::-;5186:77;5183:1;5176:88;5283:4;5280:1;5273:15;5307:4;5304:1;5297:15;5324:281;5407:27;5429:4;5407:27;:::i;:::-;5399:6;5395:40;5537:6;5525:10;5522:22;5501:18;5489:10;5486:34;5483:62;5480:88;;;5548:18;;:::i;:::-;5480:88;5588:10;5584:2;5577:22;5367:238;5324:281;;:::o;5611:129::-;5645:6;5672:20;;:::i;:::-;5662:30;;5701:33;5729:4;5721:6;5701:33;:::i;:::-;5611:129;;;:::o;5869:77::-;5906:7;5935:5;5924:16;;5869:77;;;:::o;5952:122::-;6025:24;6043:5;6025:24;:::i;:::-;6018:5;6015:35;6005:63;;6064:1;6061;6054:12;6005:63;5952:122;:::o;6080:143::-;6137:5;6168:6;6162:13;6153:22;;6184:33;6211:5;6184:33;:::i;:::-;6080:143;;;;:::o;6283:1005::-;6380:5;6424:4;6412:9;6407:3;6403:19;6399:30;6396:117;;;6432:79;;:::i;:::-;6396:117;6531:21;6547:4;6531:21;:::i;:::-;6522:30;;6619:1;6659:60;6715:3;6706:6;6695:9;6691:22;6659:60;:::i;:::-;6652:4;6645:5;6641:16;6634:86;6562:169;6799:2;6840:60;6896:3;6887:6;6876:9;6872:22;6840:60;:::i;:::-;6833:4;6826:5;6822:16;6815:86;6741:171;6980:2;7021:60;7077:3;7068:6;7057:9;7053:22;7021:60;:::i;:::-;7014:4;7007:5;7003:16;6996:86;6922:171;7168:2;7209:60;7265:3;7256:6;7245:9;7241:22;7209:60;:::i;:::-;7202:4;7195:5;7191:16;7184:86;7103:178;6283:1005;;;;:::o;7294:426::-;7401:6;7450:3;7438:9;7429:7;7425:23;7421:33;7418:120;;;7457:79;;:::i;:::-;7418:120;7577:1;7602:101;7695:7;7686:6;7675:9;7671:22;7602:101;:::i;:::-;7592:111;;7548:165;7294:426;;;;:::o;7726:118::-;7813:24;7831:5;7813:24;:::i;:::-;7808:3;7801:37;7726:118;;:::o;7850:::-;7937:24;7955:5;7937:24;:::i;:::-;7932:3;7925:37;7850:118;;:::o;7974:332::-;8095:4;8133:2;8122:9;8118:18;8110:26;;8146:71;8214:1;8203:9;8199:17;8190:6;8146:71;:::i;:::-;8227:72;8295:2;8284:9;8280:18;8271:6;8227:72;:::i;:::-;7974:332;;;;;:::o;8312:442::-;8461:4;8499:2;8488:9;8484:18;8476:26;;8512:71;8580:1;8569:9;8565:17;8556:6;8512:71;:::i;:::-;8593:72;8661:2;8650:9;8646:18;8637:6;8593:72;:::i;:::-;8675;8743:2;8732:9;8728:18;8719:6;8675:72;:::i;:::-;8312:442;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\npragma experimental ABIEncoderV2;\n\nimport { GreenNFT } from \"./GreenNFT.sol\";\nimport { GreenNFTData } from \"./GreenNFTData.sol\";\nimport { AllGreenCoin } from \"./AllGreenCoin.sol\";\n\n/// [Note]: For calling enum\nimport { GreenNFTDataCommons } from \"./commons/GreenNFTDataCommons.sol\";\n\n\n/**\n * @title - GreenNFTTradable contract\n * @notice - This contract has role that switch open/cancel to put on sale of carbon credits\n */\ncontract GreenNFTTradable {\n    AllGreenCoin private allGreenCoin;  /// [Note]: The reason why I use \"private\" is to avoid an error of \"Overriding public state variable\"\n\n    constructor(AllGreenCoin _allGreenCoin) {\n        allGreenCoin = _allGreenCoin;        \n    }\n\n    /**\n     * @notice - Open to put on sale of carbon credits.\n     * @notice - Caller is a projectOwner (Seller)\n     */\n    function openToPutOnSale(GreenNFTData _greenNFTData, GreenNFT greenNFT) public {\n        GreenNFTData greenNFTData = _greenNFTData;\n        \n        /// Update status\n        greenNFTData.updateStatus(greenNFT, GreenNFTDataCommons.GreenNFTStatus.Sale);\n\n        /// Get amount of carbon credits\n        GreenNFTDataCommons.GreenNFTEmissonData memory greenNFTEmissonData = greenNFTData.getGreenNFTEmissonDataByNFTAddress(greenNFT);\n        uint _carbonCredits = greenNFTEmissonData.carbonCredits;\n\n        /// AllGreenCoins are locked on this smart contract\n        address projectOwner = msg.sender;\n        allGreenCoin.transferFrom(projectOwner, address(this), _carbonCredits);\n    }\n\n    /**\n     * @notice - Cancel to put on sale of carbon credits.\n     * @notice - Caller is a seller\n     */\n    function cancelToPutOnSale(GreenNFTData _greenNFTData, GreenNFT greenNFT) public {\n        GreenNFTData greenNFTData = _greenNFTData;\n\n        /// Update status\n        greenNFTData.updateStatus(greenNFT, GreenNFTDataCommons.GreenNFTStatus.NotSale);\n\n        /// Get amount of carbon credits\n        GreenNFTDataCommons.GreenNFTEmissonData memory greenNFTEmissonData = greenNFTData.getGreenNFTEmissonDataByNFTAddress(greenNFT);\n        uint _carbonCredits = greenNFTEmissonData.carbonCredits;\n\n        /// AllGreenCoins locked are relesed from this smart contract and transferred into a projectOwner (seller) \n        address projectOwner = msg.sender;\n        allGreenCoin.transfer(projectOwner, _carbonCredits);\n    }\n\n}\n",
  "sourcePath": "/home/tswisse/Documents/surfacelargepro/newfull/contrat/contracts/GreenNFTTradable.sol",
  "ast": {
    "absolutePath": "project:/contracts/GreenNFTTradable.sol",
    "exportedSymbols": {
      "AllGreenCoin": [
        4027
      ],
      "GreenNFT": [
        4110
      ],
      "GreenNFTData": [
        4672
      ],
      "GreenNFTDataCommons": [
        5799
      ],
      "GreenNFTTradable": [
        5712
      ]
    },
    "id": 5713,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5576,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:26"
      },
      {
        "id": 5577,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:26"
      },
      {
        "absolutePath": "project:/contracts/GreenNFT.sol",
        "file": "./GreenNFT.sol",
        "id": 5579,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5713,
        "sourceUnit": 4111,
        "src": "93:42:26",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5578,
              "name": "GreenNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4110,
              "src": "102:8:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/GreenNFTData.sol",
        "file": "./GreenNFTData.sol",
        "id": 5581,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5713,
        "sourceUnit": 4673,
        "src": "136:50:26",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5580,
              "name": "GreenNFTData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4672,
              "src": "145:12:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/AllGreenCoin.sol",
        "file": "./AllGreenCoin.sol",
        "id": 5583,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5713,
        "sourceUnit": 4028,
        "src": "187:50:26",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5582,
              "name": "AllGreenCoin",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4027,
              "src": "196:12:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/commons/GreenNFTDataCommons.sol",
        "file": "./commons/GreenNFTDataCommons.sol",
        "id": 5585,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5713,
        "sourceUnit": 5800,
        "src": "268:72:26",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5584,
              "name": "GreenNFTDataCommons",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5799,
              "src": "277:19:26",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "GreenNFTTradable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5586,
          "nodeType": "StructuredDocumentation",
          "src": "343:138:26",
          "text": " @title - GreenNFTTradable contract\n @notice - This contract has role that switch open/cancel to put on sale of carbon credits"
        },
        "fullyImplemented": true,
        "id": 5712,
        "linearizedBaseContracts": [
          5712
        ],
        "name": "GreenNFTTradable",
        "nameLocation": "491:16:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5589,
            "mutability": "mutable",
            "name": "allGreenCoin",
            "nameLocation": "535:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 5712,
            "src": "514:33:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
              "typeString": "contract AllGreenCoin"
            },
            "typeName": {
              "id": 5588,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5587,
                "name": "AllGreenCoin",
                "nameLocations": [
                  "514:12:26"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4027,
                "src": "514:12:26"
              },
              "referencedDeclaration": 4027,
              "src": "514:12:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                "typeString": "contract AllGreenCoin"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5600,
              "nodeType": "Block",
              "src": "697:53:26",
              "statements": [
                {
                  "expression": {
                    "id": 5598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5596,
                      "name": "allGreenCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5589,
                      "src": "707:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                        "typeString": "contract AllGreenCoin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5597,
                      "name": "_allGreenCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5593,
                      "src": "722:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                        "typeString": "contract AllGreenCoin"
                      }
                    },
                    "src": "707:28:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                      "typeString": "contract AllGreenCoin"
                    }
                  },
                  "id": 5599,
                  "nodeType": "ExpressionStatement",
                  "src": "707:28:26"
                }
              ]
            },
            "documentation": {
              "id": 5590,
              "nodeType": "StructuredDocumentation",
              "src": "550:102:26",
              "text": "[Note]: The reason why I use \"private\" is to avoid an error of \"Overriding public state variable\""
            },
            "id": 5601,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5593,
                  "mutability": "mutable",
                  "name": "_allGreenCoin",
                  "nameLocation": "682:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "669:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                    "typeString": "contract AllGreenCoin"
                  },
                  "typeName": {
                    "id": 5592,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5591,
                      "name": "AllGreenCoin",
                      "nameLocations": [
                        "669:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4027,
                      "src": "669:12:26"
                    },
                    "referencedDeclaration": 4027,
                    "src": "669:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                      "typeString": "contract AllGreenCoin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:28:26"
            },
            "returnParameters": {
              "id": 5595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:26"
            },
            "scope": 5712,
            "src": "657:93:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5657,
              "nodeType": "Block",
              "src": "958:606:26",
              "statements": [
                {
                  "assignments": [
                    5613
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5613,
                      "mutability": "mutable",
                      "name": "greenNFTData",
                      "nameLocation": "981:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5657,
                      "src": "968:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                        "typeString": "contract GreenNFTData"
                      },
                      "typeName": {
                        "id": 5612,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5611,
                          "name": "GreenNFTData",
                          "nameLocations": [
                            "968:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4672,
                          "src": "968:12:26"
                        },
                        "referencedDeclaration": 4672,
                        "src": "968:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5615,
                  "initialValue": {
                    "id": 5614,
                    "name": "_greenNFTData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5605,
                    "src": "996:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                      "typeString": "contract GreenNFTData"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "968:41:26"
                },
                {
                  "documentation": "Update status",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5619,
                        "name": "greenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5608,
                        "src": "1080:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 5620,
                            "name": "GreenNFTDataCommons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5799,
                            "src": "1090:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GreenNFTDataCommons_$5799_$",
                              "typeString": "type(contract GreenNFTDataCommons)"
                            }
                          },
                          "id": 5621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1110:14:26",
                          "memberName": "GreenNFTStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5737,
                          "src": "1090:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_GreenNFTStatus_$5737_$",
                            "typeString": "type(enum GreenNFTDataCommons.GreenNFTStatus)"
                          }
                        },
                        "id": 5622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1125:4:26",
                        "memberName": "Sale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5735,
                        "src": "1090:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GreenNFTStatus_$5737",
                          "typeString": "enum GreenNFTDataCommons.GreenNFTStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        },
                        {
                          "typeIdentifier": "t_enum$_GreenNFTStatus_$5737",
                          "typeString": "enum GreenNFTDataCommons.GreenNFTStatus"
                        }
                      ],
                      "expression": {
                        "id": 5616,
                        "name": "greenNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5613,
                        "src": "1054:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "id": 5618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1067:12:26",
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4370,
                      "src": "1054:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_GreenNFT_$4110_$_t_enum$_GreenNFTStatus_$5737_$returns$_t_bool_$",
                        "typeString": "function (contract GreenNFT,enum GreenNFTDataCommons.GreenNFTStatus) external returns (bool)"
                      }
                    },
                    "id": 5623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1054:76:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5624,
                  "nodeType": "ExpressionStatement",
                  "src": "1054:76:26"
                },
                {
                  "assignments": [
                    5629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5629,
                      "mutability": "mutable",
                      "name": "greenNFTEmissonData",
                      "nameLocation": "1229:19:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5657,
                      "src": "1182:66:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                        "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData"
                      },
                      "typeName": {
                        "id": 5628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5627,
                          "name": "GreenNFTDataCommons.GreenNFTEmissonData",
                          "nameLocations": [
                            "1182:19:26",
                            "1202:19:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5798,
                          "src": "1182:39:26"
                        },
                        "referencedDeclaration": 5798,
                        "src": "1182:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_storage_ptr",
                          "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get amount of carbon credits",
                  "id": 5634,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5632,
                        "name": "greenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5608,
                        "src": "1299:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      ],
                      "expression": {
                        "id": 5630,
                        "name": "greenNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5613,
                        "src": "1251:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "id": 5631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1264:34:26",
                      "memberName": "getGreenNFTEmissonDataByNFTAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4630,
                      "src": "1251:47:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_GreenNFT_$4110_$returns$_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_$",
                        "typeString": "function (contract GreenNFT) view external returns (struct GreenNFTDataCommons.GreenNFTEmissonData memory)"
                      }
                    },
                    "id": 5633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                      "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1182:126:26"
                },
                {
                  "assignments": [
                    5636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5636,
                      "mutability": "mutable",
                      "name": "_carbonCredits",
                      "nameLocation": "1323:14:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5657,
                      "src": "1318:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5635,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1318:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5639,
                  "initialValue": {
                    "expression": {
                      "id": 5637,
                      "name": "greenNFTEmissonData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5629,
                      "src": "1340:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                        "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData memory"
                      }
                    },
                    "id": 5638,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1360:13:26",
                    "memberName": "carbonCredits",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5794,
                    "src": "1340:33:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1318:55:26"
                },
                {
                  "assignments": [
                    5642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5642,
                      "mutability": "mutable",
                      "name": "projectOwner",
                      "nameLocation": "1452:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5657,
                      "src": "1444:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5641,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1444:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "AllGreenCoins are locked on this smart contract",
                  "id": 5645,
                  "initialValue": {
                    "expression": {
                      "id": 5643,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1467:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1471:6:26",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1467:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1444:33:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5649,
                        "name": "projectOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5642,
                        "src": "1513:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 5652,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1535:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenNFTTradable_$5712",
                              "typeString": "contract GreenNFTTradable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GreenNFTTradable_$5712",
                              "typeString": "contract GreenNFTTradable"
                            }
                          ],
                          "id": 5651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1527:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1527:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1527:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5654,
                        "name": "_carbonCredits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5636,
                        "src": "1542:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5646,
                        "name": "allGreenCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5589,
                        "src": "1487:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                          "typeString": "contract AllGreenCoin"
                        }
                      },
                      "id": 5648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1500:12:26",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 340,
                      "src": "1487:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:70:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5656,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:70:26"
                }
              ]
            },
            "documentation": {
              "id": 5602,
              "nodeType": "StructuredDocumentation",
              "src": "756:118:26",
              "text": " @notice - Open to put on sale of carbon credits.\n @notice - Caller is a projectOwner (Seller)"
            },
            "functionSelector": "8b212661",
            "id": 5658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openToPutOnSale",
            "nameLocation": "888:15:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5605,
                  "mutability": "mutable",
                  "name": "_greenNFTData",
                  "nameLocation": "917:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5658,
                  "src": "904:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                    "typeString": "contract GreenNFTData"
                  },
                  "typeName": {
                    "id": 5604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5603,
                      "name": "GreenNFTData",
                      "nameLocations": [
                        "904:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4672,
                      "src": "904:12:26"
                    },
                    "referencedDeclaration": 4672,
                    "src": "904:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                      "typeString": "contract GreenNFTData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5608,
                  "mutability": "mutable",
                  "name": "greenNFT",
                  "nameLocation": "941:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5658,
                  "src": "932:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenNFT_$4110",
                    "typeString": "contract GreenNFT"
                  },
                  "typeName": {
                    "id": 5607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5606,
                      "name": "GreenNFT",
                      "nameLocations": [
                        "932:8:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4110,
                      "src": "932:8:26"
                    },
                    "referencedDeclaration": 4110,
                    "src": "932:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFT_$4110",
                      "typeString": "contract GreenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:47:26"
            },
            "returnParameters": {
              "id": 5610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:26"
            },
            "scope": 5712,
            "src": "879:685:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5710,
              "nodeType": "Block",
              "src": "1761:638:26",
              "statements": [
                {
                  "assignments": [
                    5670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5670,
                      "mutability": "mutable",
                      "name": "greenNFTData",
                      "nameLocation": "1784:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5710,
                      "src": "1771:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                        "typeString": "contract GreenNFTData"
                      },
                      "typeName": {
                        "id": 5669,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5668,
                          "name": "GreenNFTData",
                          "nameLocations": [
                            "1771:12:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4672,
                          "src": "1771:12:26"
                        },
                        "referencedDeclaration": 4672,
                        "src": "1771:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5672,
                  "initialValue": {
                    "id": 5671,
                    "name": "_greenNFTData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5662,
                    "src": "1799:13:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                      "typeString": "contract GreenNFTData"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1771:41:26"
                },
                {
                  "documentation": "Update status",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5676,
                        "name": "greenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5665,
                        "src": "1875:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 5677,
                            "name": "GreenNFTDataCommons",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5799,
                            "src": "1885:19:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_GreenNFTDataCommons_$5799_$",
                              "typeString": "type(contract GreenNFTDataCommons)"
                            }
                          },
                          "id": 5678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1905:14:26",
                          "memberName": "GreenNFTStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5737,
                          "src": "1885:34:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_GreenNFTStatus_$5737_$",
                            "typeString": "type(enum GreenNFTDataCommons.GreenNFTStatus)"
                          }
                        },
                        "id": 5679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1920:7:26",
                        "memberName": "NotSale",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5736,
                        "src": "1885:42:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_GreenNFTStatus_$5737",
                          "typeString": "enum GreenNFTDataCommons.GreenNFTStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        },
                        {
                          "typeIdentifier": "t_enum$_GreenNFTStatus_$5737",
                          "typeString": "enum GreenNFTDataCommons.GreenNFTStatus"
                        }
                      ],
                      "expression": {
                        "id": 5673,
                        "name": "greenNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5670,
                        "src": "1849:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "id": 5675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1862:12:26",
                      "memberName": "updateStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4370,
                      "src": "1849:25:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_GreenNFT_$4110_$_t_enum$_GreenNFTStatus_$5737_$returns$_t_bool_$",
                        "typeString": "function (contract GreenNFT,enum GreenNFTDataCommons.GreenNFTStatus) external returns (bool)"
                      }
                    },
                    "id": 5680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1849:79:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5681,
                  "nodeType": "ExpressionStatement",
                  "src": "1849:79:26"
                },
                {
                  "assignments": [
                    5686
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5686,
                      "mutability": "mutable",
                      "name": "greenNFTEmissonData",
                      "nameLocation": "2027:19:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5710,
                      "src": "1980:66:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                        "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData"
                      },
                      "typeName": {
                        "id": 5685,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5684,
                          "name": "GreenNFTDataCommons.GreenNFTEmissonData",
                          "nameLocations": [
                            "1980:19:26",
                            "2000:19:26"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5798,
                          "src": "1980:39:26"
                        },
                        "referencedDeclaration": 5798,
                        "src": "1980:39:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_storage_ptr",
                          "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "Get amount of carbon credits",
                  "id": 5691,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5689,
                        "name": "greenNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5665,
                        "src": "2097:8:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenNFT_$4110",
                          "typeString": "contract GreenNFT"
                        }
                      ],
                      "expression": {
                        "id": 5687,
                        "name": "greenNFTData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5670,
                        "src": "2049:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                          "typeString": "contract GreenNFTData"
                        }
                      },
                      "id": 5688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2062:34:26",
                      "memberName": "getGreenNFTEmissonDataByNFTAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4630,
                      "src": "2049:47:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_GreenNFT_$4110_$returns$_t_struct$_GreenNFTEmissonData_$5798_memory_ptr_$",
                        "typeString": "function (contract GreenNFT) view external returns (struct GreenNFTDataCommons.GreenNFTEmissonData memory)"
                      }
                    },
                    "id": 5690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                      "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1980:126:26"
                },
                {
                  "assignments": [
                    5693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5693,
                      "mutability": "mutable",
                      "name": "_carbonCredits",
                      "nameLocation": "2121:14:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5710,
                      "src": "2116:19:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5692,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2116:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5696,
                  "initialValue": {
                    "expression": {
                      "id": 5694,
                      "name": "greenNFTEmissonData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5686,
                      "src": "2138:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_GreenNFTEmissonData_$5798_memory_ptr",
                        "typeString": "struct GreenNFTDataCommons.GreenNFTEmissonData memory"
                      }
                    },
                    "id": 5695,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2158:13:26",
                    "memberName": "carbonCredits",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5794,
                    "src": "2138:33:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2116:55:26"
                },
                {
                  "assignments": [
                    5699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5699,
                      "mutability": "mutable",
                      "name": "projectOwner",
                      "nameLocation": "2306:12:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 5710,
                      "src": "2298:20:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5698,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2298:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "AllGreenCoins locked are relesed from this smart contract and transferred into a projectOwner (seller) ",
                  "id": 5702,
                  "initialValue": {
                    "expression": {
                      "id": 5700,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "2321:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 5701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2325:6:26",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2321:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2298:33:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5706,
                        "name": "projectOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5699,
                        "src": "2363:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5707,
                        "name": "_carbonCredits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5693,
                        "src": "2377:14:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5703,
                        "name": "allGreenCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5589,
                        "src": "2341:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AllGreenCoin_$4027",
                          "typeString": "contract AllGreenCoin"
                        }
                      },
                      "id": 5705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2354:8:26",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 264,
                      "src": "2341:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2341:51:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5709,
                  "nodeType": "ExpressionStatement",
                  "src": "2341:51:26"
                }
              ]
            },
            "documentation": {
              "id": 5659,
              "nodeType": "StructuredDocumentation",
              "src": "1570:105:26",
              "text": " @notice - Cancel to put on sale of carbon credits.\n @notice - Caller is a seller"
            },
            "functionSelector": "0525530a",
            "id": 5711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancelToPutOnSale",
            "nameLocation": "1689:17:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5662,
                  "mutability": "mutable",
                  "name": "_greenNFTData",
                  "nameLocation": "1720:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5711,
                  "src": "1707:26:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                    "typeString": "contract GreenNFTData"
                  },
                  "typeName": {
                    "id": 5661,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5660,
                      "name": "GreenNFTData",
                      "nameLocations": [
                        "1707:12:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4672,
                      "src": "1707:12:26"
                    },
                    "referencedDeclaration": 4672,
                    "src": "1707:12:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFTData_$4672",
                      "typeString": "contract GreenNFTData"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5665,
                  "mutability": "mutable",
                  "name": "greenNFT",
                  "nameLocation": "1744:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 5711,
                  "src": "1735:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenNFT_$4110",
                    "typeString": "contract GreenNFT"
                  },
                  "typeName": {
                    "id": 5664,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5663,
                      "name": "GreenNFT",
                      "nameLocations": [
                        "1735:8:26"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4110,
                      "src": "1735:8:26"
                    },
                    "referencedDeclaration": 4110,
                    "src": "1735:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenNFT_$4110",
                      "typeString": "contract GreenNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1706:47:26"
            },
            "returnParameters": {
              "id": 5667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:26"
            },
            "scope": 5712,
            "src": "1680:719:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5713,
        "src": "482:1920:26",
        "usedErrors": []
      }
    ],
    "src": "33:2370:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xAAFEA0124e0aFd6bf40a9C32eA0b162D45F366A0",
      "transactionHash": "0xb43704cb6a8d63f40452b220c55202464aeb3c2e8b5ae2c22baa7865fed6235f"
    },
    "1691140677742": {
      "events": {},
      "links": {},
      "address": "0x71D5A11071be15f60AD411f7d9569BBc9A462EBE",
      "transactionHash": "0xde0ab0f2f381c79603039b08b936ea0794bc16698ba0c5d63ed445edc618ef8a"
    },
    "1691140860504": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x437df62b29c6b4a52927bde59ef5a558efa77491a08e12d89f67598b295b56a5"
    },
    "1691231811870": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x437df62b29c6b4a52927bde59ef5a558efa77491a08e12d89f67598b295b56a5"
    },
    "1691667835951": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x437df62b29c6b4a52927bde59ef5a558efa77491a08e12d89f67598b295b56a5"
    },
    "1692026344137": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x437df62b29c6b4a52927bde59ef5a558efa77491a08e12d89f67598b295b56a5"
    },
    "1692357094783": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x1412868b1c97989c35f5494be829f71adf4fc28db410dba65c25019463c15251"
    },
    "1692611049324": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x1412868b1c97989c35f5494be829f71adf4fc28db410dba65c25019463c15251"
    },
    "1693817945778": {
      "events": {},
      "links": {},
      "address": "0x0E696947A06550DEf604e82C26fd9E493e576337",
      "transactionHash": "0x1412868b1c97989c35f5494be829f71adf4fc28db410dba65c25019463c15251"
    }
  },
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-11-08T12:38:47.368Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "- GreenNFTTradable contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelToPutOnSale(address,address)": {
        "notice": "- Cancel to put on sale of carbon credits.- Caller is a seller"
      },
      "constructor": {
        "notice": "[Note]: The reason why I use \"private\" is to avoid an error of \"Overriding public state variable\""
      },
      "openToPutOnSale(address,address)": {
        "notice": "- Open to put on sale of carbon credits.- Caller is a projectOwner (Seller)"
      }
    },
    "notice": "- This contract has role that switch open/cancel to put on sale of carbon credits",
    "version": 1
  }
}